name: DeployLaravel
on:
  pull_request:
    types: [closed]
    branches: [main]
jobs:
  setup:
    runs-on: self-hosted
    steps:
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo \
            "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io
          sudo usermod -aG docker $USER

  deploy:
    needs: setup
    runs-on: self-hosted
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with: 
          node-version: 16
      - name: Copy .env
        run: cp .env.example .env
      - name: Install composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install node dependencies
        run: |
          npm install
          npm ci
      - name: Setup Project
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan key:generate
          npm run build
      - name: Directory Permissions
        run: chmod -R 755 storage bootstrap/cache
      - name: Run Unit tests
        env:
          APP_ENV: testing
          DB_HOST: ${{ secrets.DB_SECRET }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
        run: php artisan test
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            cd /var/www/html/
            sudo --preserve-env=SSH_AUTH_SOCK git clone git@github.com:Elsilaves/road_mgmt.git
            cd road_mgmt
            cp .env.example .env
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan key:generate
            php artisan migrate --force
            php artisan cache:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            npm install
            npm ci
            npm run prod
